/*
 * Root project for xtext-core.
 */

import java.time.format.DateTimeFormatter
import java.time.LocalDateTime

buildscript {
	apply from: "${rootDir}/gradle/versions.gradle"
	repositories.mavenCentral()
	 repositories.maven { url 'https://jitpack.io' } // for this plugin
	dependencies {
		classpath "org.xtext:xtext-gradle-plugin:$versions.xtext_gradle_plugin"
	}
	dependencies {
    classpath 'com.github.johni0702:gradle-ecj-plugin:master-SNAPSHOT'
  }
}

plugins {
  id 'org.ajoberstar.grgit' version '4.1.0'
}

apply from: "${rootDir}/gradle/versions.gradle"
apply from: "${rootDir}/gradle/bootstrap-setup.gradle"

ext.buildTime = DateTimeFormatter.ofPattern('yyyyMMdd-HHmm').format(LocalDateTime.now())

subprojects {

configurations {
	ecj
}

dependencies {
	ecj 'org.eclipse.jdt:ecj:3.27.0'
}

	group = 'org.eclipse.xtext'
	version = rootProject.version
	
	apply plugin: 'maven-publish'
	apply plugin: 'java-library'
	//apply plugin: 'de.johni0702.ecj'
	dependencies {
		api platform("org.eclipse.xtext:xtext-dev-bom:$project.version")
	}
	if (findProperty('compileXtend') == 'true') {
		apply plugin: 'org.xtext.xtend'
	}
	apply plugin: 'eclipse'
	
	apply from: "${rootDir}/gradle/upstream-repositories.gradle"
	apply from: "${rootDir}/gradle/java-compiler-settings.gradle"
	apply from: "${rootDir}/gradle/xtend-compiler-settings.gradle"
	apply from: "${rootDir}/gradle/maven-deployment.gradle"
	// The bootstrap project uses only the mwe2 source set
	if (!name.endsWith('bootstrap')) {
		apply from: "${rootDir}/gradle/eclipse-project-layout.gradle"
	}
	apply from: "${rootDir}/gradle/manifest-gen.gradle"
	apply from: "${rootDir}/gradle/validation.gradle"
	compileJava {
	options.fork = true
	options.encoding = 'ISO-8859-1'
	options.compilerArgs = ['-properties', "${rootDir}/.settings/org.eclipse.jdt.core.prefs", '-encoding', 'ISO-8859-1']
	options.forkOptions.with {
		executable = 'java'
		jvmArgs = ['-classpath', project.configurations.ecj.asPath, 'org.eclipse.jdt.internal.compiler.batch.Main']
	}
}
	tasks.withType(JavaCompile) {
    options.headerOutputDirectory.convention(null)
	}
}
